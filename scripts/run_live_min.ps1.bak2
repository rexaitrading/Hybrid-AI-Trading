param(
  [string]$Config   = "config\paper_runner.yaml",
  [string]$ApiHost  = "127.0.0.1",
  [int]   $Port     = 4002,
  [int]   $ClientId = 5007,
  [switch]$Once,
  [switch]$Console,
  [string]$Universe = "AAPL,MSFT,NVDA",
  [string]$VenvPy   = ".\.venv\Scripts\python.exe"
)

# Always point PYTHONPATH to the folder that CONTAINS 'hybrid_ai_trading'
$env:PYTHONPATH = (Resolve-Path .\src).Path

# Normalize host
if ($ApiHost -eq 'localhost') { $ApiHost = '127.0.0.1' }

# Export envs for anything that reads them
$env:IB_HOST      = $ApiHost
$env:IB_PORT      = [string]$Port
$env:IB_CLIENT_ID = [string]$ClientId

Write-Host "IB env set: $($env:IB_HOST):$($env:IB_PORT) (clientId=$($env:IB_CLIENT_ID))" -ForegroundColor Cyan
Write-Host "Config: $Config" -ForegroundColor DarkCyan

# --- Connectivity smoke test ---
$probe = @"
from ib_insync import *
ib = IB()
ok = ib.connect('$ApiHost', $Port, clientId=$ClientId, timeout=12)
print('probe_connected=', bool(ok))
if ok:
    print('probe_currentTime=', ib.reqCurrentTime())
ib.disconnect()
"@
$tmp = Join-Path $env:TEMP "ib_probe_run_live_min_$ClientId.py"
[IO.File]::WriteAllText($tmp, $probe, (New-Object System.Text.UTF8Encoding($false)))
& $VenvPy $tmp

# --- Run the runner under src ---
$runnerPath = ".\src\hybrid_ai_trading\runners\runner_paper.py"
if (-not (Test-Path $runnerPath)) {
  Write-Host "Runner file not found at $runnerPath" -ForegroundColor Red
  exit 1
}

# Build args
$argsList = @("--config", $Config, "--universe", $Universe, "--mdt", "3")
if ($Once) { $argsList += "--once" }

if ($Console) {
  # Stream JSON logs to console; point log sink to Windows null device
  $argsList += @("--json", "--log-file", "NUL", "--log-level", "DEBUG")
}  else {
  # default: logs go to files
  & $VenvPy $runnerPath @argsList
}
exit $LASTEXITCODE
