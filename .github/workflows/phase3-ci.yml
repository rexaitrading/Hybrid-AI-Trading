name: Phase3 CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  gate:
    name: Resolve gates
    runs-on: ubuntu-latest
    outputs:
      phase3: ${{ steps.out.outputs.phase3 }}
      ibg:    ${{ steps.out.outputs.ibg }}
    steps:
      - id: out
        shell: bash
        run: |
          echo "phase3=${{ vars.RUN_PHASE3_ENABLED }}" >> "$GITHUB_OUTPUT"
          echo "ibg=${{ vars.RUN_IBG_INT }}" >> "$GITHUB_OUTPUT"

  micro-tests:
    needs: gate
    if: ${{ needs.gate.outputs.phase3 == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Ensure CI dirs
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force .ci | Out-Null      - name: Prepare Git on Windows
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          git config --global user.email "ci@example.invalid"
          git config --global user.name  "CI"
          git config --global --add safe.directory "$PWD"
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          python -m pip uninstall -y hybrid-ai-trading 2> || echo not-installed
          pip install -e .
          python -m pip install -r requirements.txt pytest
      - name: Micro tests (isolated, fast)
        shell: pwsh
        run: |
          powershell -ExecutionPolicy Bypass -File .\scripts\run_full_repo_tests.ps1 -Mode Isolated

  full-repo-cov:
    needs: gate
    if: ${{ needs.gate.outputs.phase3 == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Ensure CI dirs
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force .ci | Out-Null      - name: Prepare Git on Windows
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          git config --global user.email "ci@example.invalid"
          git config --global user.name  "CI"
          git config --global --add safe.directory "$PWD"
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          python -m pip uninstall -y hybrid-ai-trading 2> || echo not-installed
          pip install -e .
          python -m pip install -r requirements.txt pytest pytest-cov coverage
      - name: Full repo tests with coverage
        shell: pwsh
        run: |
          powershell -ExecutionPolicy Bypass -File .\scripts\run_full_repo_tests.ps1 -WithCoverage -FailUnder 70 -JUnit
      - name: Upload coverage html
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: htmlcov/**
      - name: Upload junit
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit
          path: junit.xml

  ibg-integration:
    needs: gate
    if: ${{ (needs.gate.outputs.phase3 == 'true' || github.event_name == 'workflow_dispatch') && needs.gate.outputs.ibg == 'true' }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Ensure CI dirs
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force .ci | Out-Null      - name: Prepare Git on Windows
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          git config --global user.email "ci@example.invalid"
          git config --global user.name  "CI"
          git config --global --add safe.directory "$PWD"
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          python -m pip uninstall -y hybrid-ai-trading 2> || echo not-installed
          pip install -e .
          python -m pip install -r requirements.txt pytest ib_insync
      - name: Gated IBG integration (requires secret toggle)
        shell: pwsh
        run: |
      - name: Sanity import
        shell: pwsh
        run: |
          python - << 'PY'
          import sys, pkgutil
          print('PY:', sys.version)
          print('PKG present?', pkgutil.find_loader('hybrid_ai_trading') is not None)
          import hybrid_ai_trading as hat
          print('PKG path:', getattr(hat, '__file__', 'n/a'))
          PY
          powershell -ExecutionPolicy Bypass -File .\scripts\run_full_repo_tests.ps1 -Mode IBG