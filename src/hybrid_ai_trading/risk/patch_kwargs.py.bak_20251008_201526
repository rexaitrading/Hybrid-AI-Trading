import inspect

try:
    from .risk_manager import RiskManager as _RM
except Exception:
    _RM = None

def _patch_init():
    if _RM is None:
        return
    try:
        sig = inspect.signature(_RM.__init__)
    except Exception:
        return
    if "kwargs" in sig.parameters:
        # Already accepts **kwargs; nothing to patch.
        return

    _orig = _RM.__init__

    def _wrapped(self, *args, **kwargs):
        # Keep only kwargs that the original __init__ accepts; ignore the rest (compat)
        try:
            sig = inspect.signature(_orig)
            allowed = {k: v for k, v in kwargs.items() if k in sig.parameters}
        except Exception:
            allowed = kwargs
        return _orig(self, *args, **allowed)

    _RM.__init__ = _wrapped

_patch_init()